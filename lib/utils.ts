import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

//generated by shadcn
export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

export function isBase64Image(imageData: string) {
  const base64Regex = /^data:image\/(png|jpe?g|gif|webp);base64,/;
  return base64Regex.test(imageData);
}

export function formatDateString(dateString: string) {
  const options: Intl.DateTimeFormatOptions = {
    year: "numeric",
    month: "short",
    day: "numeric",
  };

  const date = new Date(dateString);
  const formattedDate = date.toLocaleDateString(undefined, options);

  const time = date.toLocaleTimeString([], {
    hour: "numeric",
    minute: "2-digit",
  });

  return `${time} - ${formattedDate}`;
}

interface Props {
  title: string;
  releaseDate: Date;
}

export function generateMovieURL(movie: Props) {
  return `${movie.title
    .toLowerCase()
    .replace(/\s/g, "-")}-${movie.releaseDate.getFullYear()}`;
}

export function parseMovieURL(url: string) {
  let movieWords = url.split("-");
  let year = movieWords[movieWords.length - 1];
  let name = movieWords.splice(movieWords.length - 1, 1).join(" ");
  return { title: name, releaseYear: year };
}
